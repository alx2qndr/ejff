#pragma once

#include "ejff/utilities/enable_bit_mask_operators.hpp"

#include <SDL3/SDL.h>

namespace ejff::gpu
{

enum class TextureFormat
{
    eInvalid = SDL_GPU_TEXTUREFORMAT_INVALID,

    eA8Unorm = SDL_GPU_TEXTUREFORMAT_A8_UNORM,
    eR8Unorm = SDL_GPU_TEXTUREFORMAT_R8_UNORM,
    eR8G8Unorm = SDL_GPU_TEXTUREFORMAT_R8G8_UNORM,
    eR8G8B8A8Unorm = SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UNORM,
    eR16Unorm = SDL_GPU_TEXTUREFORMAT_R16_UNORM,
    eR16G16Unorm = SDL_GPU_TEXTUREFORMAT_R16G16_UNORM,
    eR16G16B16A16Unorm = SDL_GPU_TEXTUREFORMAT_R16G16B16A16_UNORM,
    eR10G10B10A2Unorm = SDL_GPU_TEXTUREFORMAT_R10G10B10A2_UNORM,
    eB5G6R5Unorm = SDL_GPU_TEXTUREFORMAT_B5G6R5_UNORM,
    eB5G5R5A1Unorm = SDL_GPU_TEXTUREFORMAT_B5G5R5A1_UNORM,
    eB4G4R4A4Unorm = SDL_GPU_TEXTUREFORMAT_B4G4R4A4_UNORM,
    eB8G8R8A8Unorm = SDL_GPU_TEXTUREFORMAT_B8G8R8A8_UNORM,

    eBC1RGBAUnorm = SDL_GPU_TEXTUREFORMAT_BC1_RGBA_UNORM,
    eBC2RGBAUnorm = SDL_GPU_TEXTUREFORMAT_BC2_RGBA_UNORM,
    eBC3RGBAUnorm = SDL_GPU_TEXTUREFORMAT_BC3_RGBA_UNORM,
    eBC4RUnorm = SDL_GPU_TEXTUREFORMAT_BC4_R_UNORM,
    eBC5RGUnorm = SDL_GPU_TEXTUREFORMAT_BC5_RG_UNORM,
    eBC7RGBAUnorm = SDL_GPU_TEXTUREFORMAT_BC7_RGBA_UNORM,
    eBC6HRGBFloat = SDL_GPU_TEXTUREFORMAT_BC6H_RGB_FLOAT,
    eBC6HRGBUFloat = SDL_GPU_TEXTUREFORMAT_BC6H_RGB_UFLOAT,

    eR8Snorm = SDL_GPU_TEXTUREFORMAT_R8_SNORM,
    eR8G8Snorm = SDL_GPU_TEXTUREFORMAT_R8G8_SNORM,
    eR8G8B8A8Snorm = SDL_GPU_TEXTUREFORMAT_R8G8B8A8_SNORM,
    eR16Snorm = SDL_GPU_TEXTUREFORMAT_R16_SNORM,
    eR16G16Snorm = SDL_GPU_TEXTUREFORMAT_R16G16_SNORM,
    eR16G16B16A16Snorm = SDL_GPU_TEXTUREFORMAT_R16G16B16A16_SNORM,

    eR16Float = SDL_GPU_TEXTUREFORMAT_R16_FLOAT,
    eR16G16Float = SDL_GPU_TEXTUREFORMAT_R16G16_FLOAT,
    eR16G16B16A16Float = SDL_GPU_TEXTUREFORMAT_R16G16B16A16_FLOAT,
    eR32Float = SDL_GPU_TEXTUREFORMAT_R32_FLOAT,
    eR32G32Float = SDL_GPU_TEXTUREFORMAT_R32G32_FLOAT,
    eR32G32B32A32Float = SDL_GPU_TEXTUREFORMAT_R32G32B32A32_FLOAT,
    eR11G11B10UFloat = SDL_GPU_TEXTUREFORMAT_R11G11B10_UFLOAT,

    eR8Uint = SDL_GPU_TEXTUREFORMAT_R8_UINT,
    eR8G8Uint = SDL_GPU_TEXTUREFORMAT_R8G8_UINT,
    eR8G8B8A8Uint = SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UINT,
    eR16Uint = SDL_GPU_TEXTUREFORMAT_R16_UINT,
    eR16G16Uint = SDL_GPU_TEXTUREFORMAT_R16G16_UINT,
    eR16G16B16A16Uint = SDL_GPU_TEXTUREFORMAT_R16G16B16A16_UINT,
    eR32Uint = SDL_GPU_TEXTUREFORMAT_R32_UINT,
    eR32G32Uint = SDL_GPU_TEXTUREFORMAT_R32G32_UINT,
    eR32G32B32A32Uint = SDL_GPU_TEXTUREFORMAT_R32G32B32A32_UINT,

    eR8Int = SDL_GPU_TEXTUREFORMAT_R8_INT,
    eR8G8Int = SDL_GPU_TEXTUREFORMAT_R8G8_INT,
    eR8G8B8A8Int = SDL_GPU_TEXTUREFORMAT_R8G8B8A8_INT,
    eR16Int = SDL_GPU_TEXTUREFORMAT_R16_INT,
    eR16G16Int = SDL_GPU_TEXTUREFORMAT_R16G16_INT,
    eR16G16B16A16Int = SDL_GPU_TEXTUREFORMAT_R16G16B16A16_INT,
    eR32Int = SDL_GPU_TEXTUREFORMAT_R32_INT,
    eR32G32Int = SDL_GPU_TEXTUREFORMAT_R32G32_INT,
    eR32G32B32A32Int = SDL_GPU_TEXTUREFORMAT_R32G32B32A32_INT,

    eR8G8B8A8UnormSrgb = SDL_GPU_TEXTUREFORMAT_R8G8B8A8_UNORM_SRGB,
    eB8G8R8A8UnormSrgb = SDL_GPU_TEXTUREFORMAT_B8G8R8A8_UNORM_SRGB,
    eBC1RGBAUnormSrgb = SDL_GPU_TEXTUREFORMAT_BC1_RGBA_UNORM_SRGB,
    eBC2RGBAUnormSrgb = SDL_GPU_TEXTUREFORMAT_BC2_RGBA_UNORM_SRGB,
    eBC3RGBAUnormSrgb = SDL_GPU_TEXTUREFORMAT_BC3_RGBA_UNORM_SRGB,
    eBC7RGBAUnormSrgb = SDL_GPU_TEXTUREFORMAT_BC7_RGBA_UNORM_SRGB,

    eD16Unorm = SDL_GPU_TEXTUREFORMAT_D16_UNORM,
    eD24Unorm = SDL_GPU_TEXTUREFORMAT_D24_UNORM,
    eD32Float = SDL_GPU_TEXTUREFORMAT_D32_FLOAT,
    eD24UnormS8Uint = SDL_GPU_TEXTUREFORMAT_D24_UNORM_S8_UINT,
    eD32FloatS8Uint = SDL_GPU_TEXTUREFORMAT_D32_FLOAT_S8_UINT,

    eASTC4x4Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_4x4_UNORM,
    eASTC5x4Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_5x4_UNORM,
    eASTC5x5Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_5x5_UNORM,
    eASTC6x5Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_6x5_UNORM,
    eASTC6x6Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_6x6_UNORM,
    eASTC8x5Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_8x5_UNORM,
    eASTC8x6Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_8x6_UNORM,
    eASTC8x8Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_8x8_UNORM,
    eASTC10x5Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_10x5_UNORM,
    eASTC10x6Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_10x6_UNORM,
    eASTC10x8Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_10x8_UNORM,
    eASTC10x10Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_10x10_UNORM,
    eASTC12x10Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_12x10_UNORM,
    eASTC12x12Unorm = SDL_GPU_TEXTUREFORMAT_ASTC_12x12_UNORM,

    eASTC4x4UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_4x4_UNORM_SRGB,
    eASTC5x4UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_5x4_UNORM_SRGB,
    eASTC5x5UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_5x5_UNORM_SRGB,
    eASTC6x5UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_6x5_UNORM_SRGB,
    eASTC6x6UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_6x6_UNORM_SRGB,
    eASTC8x5UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_8x5_UNORM_SRGB,
    eASTC8x6UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_8x6_UNORM_SRGB,
    eASTC8x8UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_8x8_UNORM_SRGB,
    eASTC10x5UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_10x5_UNORM_SRGB,
    eASTC10x6UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_10x6_UNORM_SRGB,
    eASTC10x8UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_10x8_UNORM_SRGB,
    eASTC10x10UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_10x10_UNORM_SRGB,
    eASTC12x10UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_12x10_UNORM_SRGB,
    eASTC12x12UnormSrgb = SDL_GPU_TEXTUREFORMAT_ASTC_12x12_UNORM_SRGB,

    eASTC4x4Float = SDL_GPU_TEXTUREFORMAT_ASTC_4x4_FLOAT,
    eASTC5x4Float = SDL_GPU_TEXTUREFORMAT_ASTC_5x4_FLOAT,
    eASTC5x5Float = SDL_GPU_TEXTUREFORMAT_ASTC_5x5_FLOAT,
    eASTC6x5Float = SDL_GPU_TEXTUREFORMAT_ASTC_6x5_FLOAT,
    eASTC6x6Float = SDL_GPU_TEXTUREFORMAT_ASTC_6x6_FLOAT,
    eASTC8x5Float = SDL_GPU_TEXTUREFORMAT_ASTC_8x5_FLOAT,
    eASTC8x6Float = SDL_GPU_TEXTUREFORMAT_ASTC_8x6_FLOAT,
    eASTC8x8Float = SDL_GPU_TEXTUREFORMAT_ASTC_8x8_FLOAT,
    eASTC10x5Float = SDL_GPU_TEXTUREFORMAT_ASTC_10x5_FLOAT,
    eASTC10x6Float = SDL_GPU_TEXTUREFORMAT_ASTC_10x6_FLOAT,
    eASTC10x8Float = SDL_GPU_TEXTUREFORMAT_ASTC_10x8_FLOAT,
    eASTC10x10Float = SDL_GPU_TEXTUREFORMAT_ASTC_10x10_FLOAT,
    eASTC12x10Float = SDL_GPU_TEXTUREFORMAT_ASTC_12x10_FLOAT,
    eASTC12x12Float = SDL_GPU_TEXTUREFORMAT_ASTC_12x12_FLOAT
};

enum class TextureUsage
{
    eSampler = SDL_GPU_TEXTUREUSAGE_SAMPLER,
    eColorTarget = SDL_GPU_TEXTUREUSAGE_COLOR_TARGET,
    eDepthStencilTarget = SDL_GPU_TEXTUREUSAGE_DEPTH_STENCIL_TARGET,
    eGraphicsStorageRead = SDL_GPU_TEXTUREUSAGE_GRAPHICS_STORAGE_READ,
    eComputeStorageRead = SDL_GPU_TEXTUREUSAGE_COMPUTE_STORAGE_READ,
    eComputeStorageWrite = SDL_GPU_TEXTUREUSAGE_COMPUTE_STORAGE_WRITE,
    eComputeStorageSimultaneousReadWrite =
        SDL_GPU_TEXTUREUSAGE_COMPUTE_STORAGE_SIMULTANEOUS_READ_WRITE
};

} // namespace ejff::gpu

ENABLE_BITMASK_OPERATORS(ejff::gpu::TextureUsage);